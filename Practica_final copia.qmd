---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
library(caret)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste('El dataframe df_seeds tiene',ncol(df_seeds),'columnas')
paste('El dataframe df_seeds tiene',nrow(df_seeds),'filas')
```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
tipos<- c('Kama','Rosa','Canadian')
df_seeds$tipo <- factor(df_seeds$tipo, levels = unique(df_seeds$tipo), labels = tipos)
df_seeds
```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
seeds_media <- df_seeds |> group_by(tipo) |> summarize(area_media = mean(area))
paste('El área media para el tipo Kama es', seeds_media[1,2])
paste('El área media para el tipo Rosa es', seeds_media[2,2])
paste('El área media para el tipo Canadian es', seeds_media[3,2])
```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: 'Este es un gráfico de cajas o boxplot.

En él se muestran varias medidas estadísticas

-   Cuartiles: Q1 como la parte superior de la caja y Q2 como la parte inferior de la caja

-   Rango intercuartílico: diferencia entre el tercer cuartil (Q3) y el primer cuartil (Q1)

-   Outliers: valores atípicos

En este caso, la **línea del centro de la caja** indica la **mediana**, es decir, el valor del medio de los datos.'

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x=compacto, y=area))+geom_point(aes(color=tipo))
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**:

-   En este código se emplea el operador pipeline "\|\>" para simplificar el código

-   Se usa la función **mutate,** que hace que se cree una nueva columna llamada **is_kama**. De esta forma, en esta nueva columna, se añade TRUE o FALSE (tipo lógico) según si cumple o no con la condicion de que el tipo sea Kama.

-   Por último, se guarda esta nueva tabla reemplazando el data frame anterior "df_seeds"

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: '' Es aconsejable dividir el data set en train y test para poder **evaluar el rendimiento del modelo**, ya que si usamos todos los datos del dataset, el modelo estaría entrenado para valores específicos de esos datos y que no se podrían generalizar a otros conjuntos de datos, suceso llamado **overfitting**.

Al dividir el dataset, vemos el rendimiento en datos del propio conjunto que no han sido usados para su entrenamiento, por lo que nos da una visión más realista de cómo se comportará el modelo con datos nuevos".

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: ''Para una clasificación binaria deberemos usar la **regresión logística** ya que la variable de respuesta es categórica y no continua (como en una regresión lineal) "

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
# Primero cambiamos el contenido de la columna is_kama y asignarle los valores 1 y 0 a True y False, respectivamente:
df_seeds$is_kama <- ifelse(df_seeds$is_kama == TRUE, 1, 0)


# Los datos ya los tenemos divididos en test y train en el ejercicio 7
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]

# Después hacemos el modelo con el conjunto de entrenamiento, añadimos la fórmula y la función link
model <- glm(data=df_seeds_train, formula = is_kama ~ area + perimetro + compacto + longitud + coeficient.asimetria + longitud.ranura, family=binomial('logit'))

# Hacemos predicciones con el conjunto de prueba
kama_pred <- predict(model,df_seeds_test,type="response")

# Convertimos las probabilidades en las clases no kama y kama
y_est <- factor(ifelse(kama_pred >0.5, 1, 0))

# Evaluamos el rendimiento del modelo con la matriz de confusión
M <- table(real=df_seeds_test$is_kama, elegimos=y_est)
M
```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
# Calculamos la precisión
P <- M[2,2]/(M[1,2]+M[2,2])

# Calculamos la exhaustividad
E <- M[2,2] / (M[2,1] + M[2,2])  # verdaderos positivos / (falsos negativos + verdaderos positivos)

paste("Precisión:", P)
paste("Exhaustividad:", E)
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**:

''Este código pretende clasificar en 3 clusters los 3 tipos de semillas según unos determinados parámetros del data frame mediante el algoritmo k-means:

1.  Primero se fija una semilla para generar números aleatorios con **set.seed(123)**
2.  En la segunda línea del código se seleccionan las columnas del data frame que se quieren usar para clusterizar los datos mediante el algoritmo k-means, indicando que se formen 3 clusters, **kmeans(3).**
3.  Por último se crea una **tabla** para comparar y evaluar la **calidad** de la clusterización de los datos, comparando los datos reales con los del algoritmo"
